:root {
  --text-color: #000000;
  --text-color--light: #ababab;
  --background-color: white;
  --pop-color: #EDC92D;
  --pop-color-2: #ff6e5e;
  --button-white: #FFFFFF;
  --button-light: #FBF5DB;
  --button-medium: #F2DD83;
  --button-dark: #EDC92D;
  --button-black: #000000;
}

@font-face {
  font-family: "Modern Pictograms";
  font-weight: 100;
  src: url("../fonts/modernpictogramspro_234.eot"), url("../fonts/modernpictogramspro_234.ttf"), url("../fonts/modernpictogramspro_234.woff");
}
.required-symbol {
  font-family: "Gotham SSm A", "Gotham SSm B", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}

/* --------------------------------------------------------

Remove the unit of a length
@param {Number} $number - Number to remove unit from
@return {Number} - Unitless number

-------------------------------------------------------- */
/* --------------------------------------------------------

Variable Map Lists for the text-size mixin

A specific text-size in this mixin is defined with a font-size and a leading.

For example,
  small: (64px, 72px)
  where small is the media query width defined in the $breakpoints map-list in _responsive.scss,
  64px is the font-size
  72px is the line-height (which will be converted to a unitless value for the browser in the mixin)


The definition of each font-size/leading pair can be different for each media query width.
This is an example of a font size with different definitions for each media query width:
  $medium: (
    base: (12px, 18px),
    small: (14px, 20px),
    medium: (16px, 24px),
    large: (18px, 28px),
    huge: (20px, 32px)
  ) ;
This is generally an unusual situation because it would involve a pretty complicated typography system.


A more common example would be something like this:
  $xlarge: (
    base: (52px, 60px),
    small: (64px, 72px),
    medium: (64px, 72px),
    large: (72px, 80px),
    huge: (72px, 80px)
  ) ;

This definition includes redundant repitition of values, so it can be defined more simply like this:
  $xlarge: (
    base: (52px, 60px),
    small: (64px, 72px),
    large: (72px, 80px)
  ) ;

-------------------------------------------------------- */
/* --------------------------------------------------------
Mixin for font-size and line-height definition
  Usage Example: @include text-size(large);

Font size can take on the following values:
  small, regular, medium, large, xlarge, xxlarge

If the mixin is called and values are not entered, it will default to regular font-size
-------------------------------------------------------- */
.required-symbol {
  color: #EDC92D;
  font-weight: bold;
}
@media screen and (min-width: 1px) {
  .required-symbol {
    font-size: 15px;
    line-height: calc(15 / 15);
  }
}

body {
  text-rendering: optimizeLegibility;
}
body a {
  display: inline;
}
.wh-logo {
  background-image: url("../images/logo.svg");
  background-color: red;
  border: 10px solid red;
  width: auto;
  height: 100px;
  border-radius: 0;
  background-size: 245px 160px;
}

.wh-login {
  background: white !important;
}

.wy-control .big-name {
  text-rendering: optimizeLegibility;
}

.redactor-editor {
  display: flex;
  flex-wrap: wrap;
}
.redactor-editor figure[data-type=quote] {
  border-left: none;
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNtcy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBcUI7RUFDckIsNEJBQTRCO0VBQzVCLHlCQUF5QjtFQUN6QixvQkFBb0I7RUFDcEIsc0JBQXNCO0VBQ3RCLHVCQUF1QjtFQUN2Qix1QkFBdUI7RUFDdkIsd0JBQXdCO0VBQ3hCLHNCQUFzQjtFQUN0Qix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxnQ0FBZ0M7RUFDaEMsZ0JBQWdCO0VBQ2hCLDJJQUEySTtBQUM3STtBQUNBO0VBQ0UsK0ZBQStGO0FBQ2pHOztBQUVBOzs7Ozs7MERBTTBEO0FBQzFEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswREF5QzBEO0FBQzFEOzs7Ozs7OzswREFRMEQ7QUFDMUQ7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRTtJQUNFLGVBQWU7SUFDZiwwQkFBMEI7RUFDNUI7QUFDRjs7QUFFQTtFQUNFLGtDQUFrQztBQUNwQztBQUNBO0VBQ0UsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsMkNBQTJDO0VBQzNDLHFCQUFxQjtFQUNyQixzQkFBc0I7RUFDdEIsV0FBVztFQUNYLGFBQWE7RUFDYixnQkFBZ0I7RUFDaEIsNEJBQTRCO0FBQzlCOztBQUVBO0VBQ0UsNEJBQTRCO0FBQzlCOztBQUVBO0VBQ0Usa0NBQWtDO0FBQ3BDOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGVBQWU7QUFDakI7QUFDQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJjbXMuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOnJvb3Qge1xuICAtLXRleHQtY29sb3I6ICMwMDAwMDA7XG4gIC0tdGV4dC1jb2xvci0tbGlnaHQ6ICNhYmFiYWI7XG4gIC0tYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIC0tcG9wLWNvbG9yOiAjRURDOTJEO1xuICAtLXBvcC1jb2xvci0yOiAjZmY2ZTVlO1xuICAtLWJ1dHRvbi13aGl0ZTogI0ZGRkZGRjtcbiAgLS1idXR0b24tbGlnaHQ6ICNGQkY1REI7XG4gIC0tYnV0dG9uLW1lZGl1bTogI0YyREQ4MztcbiAgLS1idXR0b24tZGFyazogI0VEQzkyRDtcbiAgLS1idXR0b24tYmxhY2s6ICMwMDAwMDA7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJNb2Rlcm4gUGljdG9ncmFtc1wiO1xuICBmb250LXdlaWdodDogMTAwO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL21vZGVybnBpY3RvZ3JhbXNwcm9fMjM0LmVvdFwiKSwgdXJsKFwiLi4vZm9udHMvbW9kZXJucGljdG9ncmFtc3Byb18yMzQudHRmXCIpLCB1cmwoXCIuLi9mb250cy9tb2Rlcm5waWN0b2dyYW1zcHJvXzIzNC53b2ZmXCIpO1xufVxuLnJlcXVpcmVkLXN5bWJvbCB7XG4gIGZvbnQtZmFtaWx5OiBcIkdvdGhhbSBTU20gQVwiLCBcIkdvdGhhbSBTU20gQlwiLCBcIkhlbHZldGljYSBOZXVlXCIsIFwiSGVsdmV0aWNhXCIsIFwiQXJpYWxcIiwgc2Fucy1zZXJpZjtcbn1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuUmVtb3ZlIHRoZSB1bml0IG9mIGEgbGVuZ3RoXG5AcGFyYW0ge051bWJlcn0gJG51bWJlciAtIE51bWJlciB0byByZW1vdmUgdW5pdCBmcm9tXG5AcmV0dXJuIHtOdW1iZXJ9IC0gVW5pdGxlc3MgbnVtYmVyXG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5WYXJpYWJsZSBNYXAgTGlzdHMgZm9yIHRoZSB0ZXh0LXNpemUgbWl4aW5cblxuQSBzcGVjaWZpYyB0ZXh0LXNpemUgaW4gdGhpcyBtaXhpbiBpcyBkZWZpbmVkIHdpdGggYSBmb250LXNpemUgYW5kIGEgbGVhZGluZy5cblxuRm9yIGV4YW1wbGUsXG4gIHNtYWxsOiAoNjRweCwgNzJweClcbiAgd2hlcmUgc21hbGwgaXMgdGhlIG1lZGlhIHF1ZXJ5IHdpZHRoIGRlZmluZWQgaW4gdGhlICRicmVha3BvaW50cyBtYXAtbGlzdCBpbiBfcmVzcG9uc2l2ZS5zY3NzLFxuICA2NHB4IGlzIHRoZSBmb250LXNpemVcbiAgNzJweCBpcyB0aGUgbGluZS1oZWlnaHQgKHdoaWNoIHdpbGwgYmUgY29udmVydGVkIHRvIGEgdW5pdGxlc3MgdmFsdWUgZm9yIHRoZSBicm93c2VyIGluIHRoZSBtaXhpbilcblxuXG5UaGUgZGVmaW5pdGlvbiBvZiBlYWNoIGZvbnQtc2l6ZS9sZWFkaW5nIHBhaXIgY2FuIGJlIGRpZmZlcmVudCBmb3IgZWFjaCBtZWRpYSBxdWVyeSB3aWR0aC5cblRoaXMgaXMgYW4gZXhhbXBsZSBvZiBhIGZvbnQgc2l6ZSB3aXRoIGRpZmZlcmVudCBkZWZpbml0aW9ucyBmb3IgZWFjaCBtZWRpYSBxdWVyeSB3aWR0aDpcbiAgJG1lZGl1bTogKFxuICAgIGJhc2U6ICgxMnB4LCAxOHB4KSxcbiAgICBzbWFsbDogKDE0cHgsIDIwcHgpLFxuICAgIG1lZGl1bTogKDE2cHgsIDI0cHgpLFxuICAgIGxhcmdlOiAoMThweCwgMjhweCksXG4gICAgaHVnZTogKDIwcHgsIDMycHgpXG4gICkgO1xuVGhpcyBpcyBnZW5lcmFsbHkgYW4gdW51c3VhbCBzaXR1YXRpb24gYmVjYXVzZSBpdCB3b3VsZCBpbnZvbHZlIGEgcHJldHR5IGNvbXBsaWNhdGVkIHR5cG9ncmFwaHkgc3lzdGVtLlxuXG5cbkEgbW9yZSBjb21tb24gZXhhbXBsZSB3b3VsZCBiZSBzb21ldGhpbmcgbGlrZSB0aGlzOlxuICAkeGxhcmdlOiAoXG4gICAgYmFzZTogKDUycHgsIDYwcHgpLFxuICAgIHNtYWxsOiAoNjRweCwgNzJweCksXG4gICAgbWVkaXVtOiAoNjRweCwgNzJweCksXG4gICAgbGFyZ2U6ICg3MnB4LCA4MHB4KSxcbiAgICBodWdlOiAoNzJweCwgODBweClcbiAgKSA7XG5cblRoaXMgZGVmaW5pdGlvbiBpbmNsdWRlcyByZWR1bmRhbnQgcmVwaXRpdGlvbiBvZiB2YWx1ZXMsIHNvIGl0IGNhbiBiZSBkZWZpbmVkIG1vcmUgc2ltcGx5IGxpa2UgdGhpczpcbiAgJHhsYXJnZTogKFxuICAgIGJhc2U6ICg1MnB4LCA2MHB4KSxcbiAgICBzbWFsbDogKDY0cHgsIDcycHgpLFxuICAgIGxhcmdlOiAoNzJweCwgODBweClcbiAgKSA7XG5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuTWl4aW4gZm9yIGZvbnQtc2l6ZSBhbmQgbGluZS1oZWlnaHQgZGVmaW5pdGlvblxuICBVc2FnZSBFeGFtcGxlOiBAaW5jbHVkZSB0ZXh0LXNpemUobGFyZ2UpO1xuXG5Gb250IHNpemUgY2FuIHRha2Ugb24gdGhlIGZvbGxvd2luZyB2YWx1ZXM6XG4gIHNtYWxsLCByZWd1bGFyLCBtZWRpdW0sIGxhcmdlLCB4bGFyZ2UsIHh4bGFyZ2VcblxuSWYgdGhlIG1peGluIGlzIGNhbGxlZCBhbmQgdmFsdWVzIGFyZSBub3QgZW50ZXJlZCwgaXQgd2lsbCBkZWZhdWx0IHRvIHJlZ3VsYXIgZm9udC1zaXplXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLnJlcXVpcmVkLXN5bWJvbCB7XG4gIGNvbG9yOiAjRURDOTJEO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDFweCkge1xuICAucmVxdWlyZWQtc3ltYm9sIHtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgbGluZS1oZWlnaHQ6IGNhbGMoMTUgLyAxNSk7XG4gIH1cbn1cblxuYm9keSB7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG5ib2R5IGEge1xuICBkaXNwbGF5OiBpbmxpbmU7XG59XG4ud2gtbG9nbyB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlcy9sb2dvLnN2Z1wiKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICBib3JkZXI6IDEwcHggc29saWQgcmVkO1xuICB3aWR0aDogYXV0bztcbiAgaGVpZ2h0OiAxMDBweDtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgYmFja2dyb3VuZC1zaXplOiAyNDVweCAxNjBweDtcbn1cblxuLndoLWxvZ2luIHtcbiAgYmFja2dyb3VuZDogd2hpdGUgIWltcG9ydGFudDtcbn1cblxuLnd5LWNvbnRyb2wgLmJpZy1uYW1lIHtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbn1cblxuLnJlZGFjdG9yLWVkaXRvciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cbi5yZWRhY3Rvci1lZGl0b3IgZmlndXJlW2RhdGEtdHlwZT1xdW90ZV0ge1xuICBib3JkZXItbGVmdDogbm9uZTtcbn0iXX0= */