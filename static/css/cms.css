:root {
  --text-color: #000000;
  --text-color--light: #ababab;
  --background-color: white;
  --pop-color: #EDC92D;
  --pop-color-2: #ff6e5e;
  --button-white: #FFFFFF;
  --button-light: #FBF5DB;
  --button-medium: #F2DD83;
  --button-dark: #EDC92D;
  --button-black: #000000;
}

@font-face {
  font-family: "Modern Pictograms";
  font-weight: 100;
  src: url("../fonts/modernpictogramspro_234.eot"), url("../fonts/modernpictogramspro_234.ttf"), url("../fonts/modernpictogramspro_234.woff");
}
.required-symbol {
  font-family: "Gotham SSm A", "Gotham SSm B", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
}

/* --------------------------------------------------------

Remove the unit of a length
@param {Number} $number - Number to remove unit from
@return {Number} - Unitless number

-------------------------------------------------------- */
/* --------------------------------------------------------

Variable Map Lists for the text-size mixin

A specific text-size in this mixin is defined with a font-size and a leading.

For example,
  small: (64px, 72px)
  where small is the media query width defined in the $breakpoints map-list in _responsive.scss,
  64px is the font-size
  72px is the line-height (which will be converted to a unitless value for the browser in the mixin)


The definition of each font-size/leading pair can be different for each media query width.
This is an example of a font size with different definitions for each media query width:
  $medium: (
    base: (12px, 18px),
    small: (14px, 20px),
    medium: (16px, 24px),
    large: (18px, 28px),
    huge: (20px, 32px)
  ) ;
This is generally an unusual situation because it would involve a pretty complicated typography system.


A more common example would be something like this:
  $xlarge: (
    base: (52px, 60px),
    small: (64px, 72px),
    medium: (64px, 72px),
    large: (72px, 80px),
    huge: (72px, 80px)
  ) ;

This definition includes redundant repitition of values, so it can be defined more simply like this:
  $xlarge: (
    base: (52px, 60px),
    small: (64px, 72px),
    large: (72px, 80px)
  ) ;

-------------------------------------------------------- */
/* --------------------------------------------------------
Mixin for font-size and line-height definition
  Usage Example: @include text-size(large);

Font size can take on the following values:
  small, regular, medium, large, xlarge, xxlarge

If the mixin is called and values are not entered, it will default to regular font-size
-------------------------------------------------------- */
.required-symbol {
  color: #EDC92D;
  font-weight: bold;
}
@media screen and (min-width: 1px) {
  .required-symbol {
    font-size: 15px;
    line-height: calc(15 / 15);
  }
}

body {
  text-rendering: optimizeLegibility;
}
body a {
  display: inline;
}
.wh-logo {
  background-image: url("../images/logo.svg");
  background-color: red;
  border: 10px solid red;
  width: auto;
  height: 100px;
  border-radius: 0;
  background-size: 245px 160px;
}

.wh-login {
  background: white !important;
}

.wy-control .big-name {
  text-rendering: optimizeLegibility;
}

.redactor-editor {
  display: flex;
  flex-wrap: wrap;
}
.redactor-editor figure[data-type=quote] {
  border-left: none;
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNtcy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBc0I7RUFDdEIsNkJBQTZCO0VBQzdCLDBCQUEwQjtFQUMxQixxQkFBcUI7RUFDckIsdUJBQXVCO0VBQ3ZCLHdCQUF3QjtFQUN4Qix3QkFBd0I7RUFDeEIseUJBQXlCO0VBQ3pCLHVCQUF1QjtFQUN2Qix3QkFBd0I7Q0FDekI7O0FBRUQ7RUFDRSxpQ0FBaUM7RUFDakMsaUJBQWlCO0VBQ2pCLDRJQUE0STtDQUM3STtBQUNEO0VBQ0UsZ0dBQWdHO0NBQ2pHOztBQUVEOzs7Ozs7MkRBTTJEO0FBQzNEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyREF5QzJEO0FBQzNEOzs7Ozs7OzsyREFRMkQ7QUFDM0Q7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0NBQ25CO0FBQ0Q7RUFDRTtJQUNFLGdCQUFnQjtJQUNoQiwyQkFBMkI7R0FDNUI7Q0FDRjs7QUFFRDtFQUNFLG1DQUFtQztDQUNwQztBQUNEO0VBQ0UsZ0JBQWdCO0NBQ2pCO0FBQ0Q7RUFDRSw0Q0FBNEM7RUFDNUMsc0JBQXNCO0VBQ3RCLHVCQUF1QjtFQUN2QixZQUFZO0VBQ1osY0FBYztFQUNkLGlCQUFpQjtFQUNqQiw2QkFBNkI7Q0FDOUI7O0FBRUQ7RUFDRSw2QkFBNkI7Q0FDOUI7O0FBRUQ7RUFDRSxtQ0FBbUM7Q0FDcEM7O0FBRUQ7RUFDRSxjQUFjO0VBQ2QsZ0JBQWdCO0NBQ2pCO0FBQ0Q7RUFDRSxrQkFBa0I7Q0FDbkIiLCJmaWxlIjoiY21zLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpyb290IHtcbiAgLS10ZXh0LWNvbG9yOiAjMDAwMDAwO1xuICAtLXRleHQtY29sb3ItLWxpZ2h0OiAjYWJhYmFiO1xuICAtLWJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAtLXBvcC1jb2xvcjogI0VEQzkyRDtcbiAgLS1wb3AtY29sb3ItMjogI2ZmNmU1ZTtcbiAgLS1idXR0b24td2hpdGU6ICNGRkZGRkY7XG4gIC0tYnV0dG9uLWxpZ2h0OiAjRkJGNURCO1xuICAtLWJ1dHRvbi1tZWRpdW06ICNGMkREODM7XG4gIC0tYnV0dG9uLWRhcms6ICNFREM5MkQ7XG4gIC0tYnV0dG9uLWJsYWNrOiAjMDAwMDAwO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiTW9kZXJuIFBpY3RvZ3JhbXNcIjtcbiAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9tb2Rlcm5waWN0b2dyYW1zcHJvXzIzNC5lb3RcIiksIHVybChcIi4uL2ZvbnRzL21vZGVybnBpY3RvZ3JhbXNwcm9fMjM0LnR0ZlwiKSwgdXJsKFwiLi4vZm9udHMvbW9kZXJucGljdG9ncmFtc3Byb18yMzQud29mZlwiKTtcbn1cbi5yZXF1aXJlZC1zeW1ib2wge1xuICBmb250LWZhbWlseTogXCJHb3RoYW0gU1NtIEFcIiwgXCJHb3RoYW0gU1NtIEJcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBcIkhlbHZldGljYVwiLCBcIkFyaWFsXCIsIHNhbnMtc2VyaWY7XG59XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cblJlbW92ZSB0aGUgdW5pdCBvZiBhIGxlbmd0aFxuQHBhcmFtIHtOdW1iZXJ9ICRudW1iZXIgLSBOdW1iZXIgdG8gcmVtb3ZlIHVuaXQgZnJvbVxuQHJldHVybiB7TnVtYmVyfSAtIFVuaXRsZXNzIG51bWJlclxuXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuVmFyaWFibGUgTWFwIExpc3RzIGZvciB0aGUgdGV4dC1zaXplIG1peGluXG5cbkEgc3BlY2lmaWMgdGV4dC1zaXplIGluIHRoaXMgbWl4aW4gaXMgZGVmaW5lZCB3aXRoIGEgZm9udC1zaXplIGFuZCBhIGxlYWRpbmcuXG5cbkZvciBleGFtcGxlLFxuICBzbWFsbDogKDY0cHgsIDcycHgpXG4gIHdoZXJlIHNtYWxsIGlzIHRoZSBtZWRpYSBxdWVyeSB3aWR0aCBkZWZpbmVkIGluIHRoZSAkYnJlYWtwb2ludHMgbWFwLWxpc3QgaW4gX3Jlc3BvbnNpdmUuc2NzcyxcbiAgNjRweCBpcyB0aGUgZm9udC1zaXplXG4gIDcycHggaXMgdGhlIGxpbmUtaGVpZ2h0ICh3aGljaCB3aWxsIGJlIGNvbnZlcnRlZCB0byBhIHVuaXRsZXNzIHZhbHVlIGZvciB0aGUgYnJvd3NlciBpbiB0aGUgbWl4aW4pXG5cblxuVGhlIGRlZmluaXRpb24gb2YgZWFjaCBmb250LXNpemUvbGVhZGluZyBwYWlyIGNhbiBiZSBkaWZmZXJlbnQgZm9yIGVhY2ggbWVkaWEgcXVlcnkgd2lkdGguXG5UaGlzIGlzIGFuIGV4YW1wbGUgb2YgYSBmb250IHNpemUgd2l0aCBkaWZmZXJlbnQgZGVmaW5pdGlvbnMgZm9yIGVhY2ggbWVkaWEgcXVlcnkgd2lkdGg6XG4gICRtZWRpdW06IChcbiAgICBiYXNlOiAoMTJweCwgMThweCksXG4gICAgc21hbGw6ICgxNHB4LCAyMHB4KSxcbiAgICBtZWRpdW06ICgxNnB4LCAyNHB4KSxcbiAgICBsYXJnZTogKDE4cHgsIDI4cHgpLFxuICAgIGh1Z2U6ICgyMHB4LCAzMnB4KVxuICApIDtcblRoaXMgaXMgZ2VuZXJhbGx5IGFuIHVudXN1YWwgc2l0dWF0aW9uIGJlY2F1c2UgaXQgd291bGQgaW52b2x2ZSBhIHByZXR0eSBjb21wbGljYXRlZCB0eXBvZ3JhcGh5IHN5c3RlbS5cblxuXG5BIG1vcmUgY29tbW9uIGV4YW1wbGUgd291bGQgYmUgc29tZXRoaW5nIGxpa2UgdGhpczpcbiAgJHhsYXJnZTogKFxuICAgIGJhc2U6ICg1MnB4LCA2MHB4KSxcbiAgICBzbWFsbDogKDY0cHgsIDcycHgpLFxuICAgIG1lZGl1bTogKDY0cHgsIDcycHgpLFxuICAgIGxhcmdlOiAoNzJweCwgODBweCksXG4gICAgaHVnZTogKDcycHgsIDgwcHgpXG4gICkgO1xuXG5UaGlzIGRlZmluaXRpb24gaW5jbHVkZXMgcmVkdW5kYW50IHJlcGl0aXRpb24gb2YgdmFsdWVzLCBzbyBpdCBjYW4gYmUgZGVmaW5lZCBtb3JlIHNpbXBseSBsaWtlIHRoaXM6XG4gICR4bGFyZ2U6IChcbiAgICBiYXNlOiAoNTJweCwgNjBweCksXG4gICAgc21hbGw6ICg2NHB4LCA3MnB4KSxcbiAgICBsYXJnZTogKDcycHgsIDgwcHgpXG4gICkgO1xuXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbk1peGluIGZvciBmb250LXNpemUgYW5kIGxpbmUtaGVpZ2h0IGRlZmluaXRpb25cbiAgVXNhZ2UgRXhhbXBsZTogQGluY2x1ZGUgdGV4dC1zaXplKGxhcmdlKTtcblxuRm9udCBzaXplIGNhbiB0YWtlIG9uIHRoZSBmb2xsb3dpbmcgdmFsdWVzOlxuICBzbWFsbCwgcmVndWxhciwgbWVkaXVtLCBsYXJnZSwgeGxhcmdlLCB4eGxhcmdlXG5cbklmIHRoZSBtaXhpbiBpcyBjYWxsZWQgYW5kIHZhbHVlcyBhcmUgbm90IGVudGVyZWQsIGl0IHdpbGwgZGVmYXVsdCB0byByZWd1bGFyIGZvbnQtc2l6ZVxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi5yZXF1aXJlZC1zeW1ib2wge1xuICBjb2xvcjogI0VEQzkyRDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxcHgpIHtcbiAgLnJlcXVpcmVkLXN5bWJvbCB7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGxpbmUtaGVpZ2h0OiBjYWxjKDE1IC8gMTUpO1xuICB9XG59XG5cbmJvZHkge1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xufVxuYm9keSBhIHtcbiAgZGlzcGxheTogaW5saW5lO1xufVxuLndoLWxvZ28ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWFnZXMvbG9nby5zdmdcIik7XG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcbiAgYm9yZGVyOiAxMHB4IHNvbGlkIHJlZDtcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogMTAwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG4gIGJhY2tncm91bmQtc2l6ZTogMjQ1cHggMTYwcHg7XG59XG5cbi53aC1sb2dpbiB7XG4gIGJhY2tncm91bmQ6IHdoaXRlICFpbXBvcnRhbnQ7XG59XG5cbi53eS1jb250cm9sIC5iaWctbmFtZSB7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG5cbi5yZWRhY3Rvci1lZGl0b3Ige1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG59XG4ucmVkYWN0b3ItZWRpdG9yIGZpZ3VyZVtkYXRhLXR5cGU9cXVvdGVdIHtcbiAgYm9yZGVyLWxlZnQ6IG5vbmU7XG59Il19 */